service: multi-envs-serverless
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  versionFunctions: true
  region: eu-west-2
  stage: dev

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${opt:stage, self:provider.stage}-user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
    CognitoUserPoolClientApp:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-${opt:stage, self:provider.stage}-user-pool-app-client
        UserPoolId:
          Ref: CognitoUserPool
        GenerateSecret: true
    ApiGatewayAuthorizer:
      DependsOn:
        - ApiGatewayRestApi
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: cognito-authorizer
        IdentitySource: method.request.header.Authorization
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - Fn::GetAtt: [CognitoUserPool, Arn]
